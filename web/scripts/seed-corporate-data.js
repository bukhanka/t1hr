const { PrismaClient } = require('@prisma/client')
const prisma = new PrismaClient()

async function seedCorporateData() {
  console.log('üå± Seeding corporate data...')

  try {
    // –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã
    await prisma.project.createMany({
      data: [
        {
          name: '–§–µ–Ω–∏–∫—Å',
          description: '–ú–æ–¥–µ—Ä–Ω–∏–∑–∞—Ü–∏—è –ø–ª–∞—Ç–µ–∂–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤',
          status: 'ACTIVE'
        },
        {
          name: '–ê–ª—å—Ñ–∞-–ê–Ω–∞–ª–∏—Ç–∏–∫–∞',
          description: '–í–Ω–µ–¥—Ä–µ–Ω–∏–µ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∫–ª–∏–µ–Ω—Ç—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö',
          status: 'ACTIVE'
        },
        {
          name: '–ú–æ–±–∏–ª—å–Ω—ã–π –ë–∞–Ω–∫ v2.0',
          description: '–ü–µ—Ä–µ–ø–∏—Å—ã–≤–∞–Ω–∏–µ –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ React Native',
          status: 'ACTIVE'
        },
        {
          name: '–û–±–ª–∞—á–Ω–∞—è –ú–∏–≥—Ä–∞—Ü–∏—è',
          description: '–ü–µ—Ä–µ–Ω–æ—Å –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã –≤ AWS —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Kubernetes',
          status: 'ACTIVE'
        },
        {
          name: '–°–∏—Å—Ç–µ–º–∞ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–π',
          description: '–°–æ–∑–¥–∞–Ω–∏–µ –µ–¥–∏–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤',
          status: 'ACTIVE'
        }
      ],
      skipDuplicates: true
    })

    // –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–∫—Ä—ã—Ç—ã–µ –≤–∞–∫–∞–Ω—Å–∏–∏
    await prisma.jobOpening.createMany({
      data: [
        {
          title: 'Senior Backend Developer',
          description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –≤—ã—Å–æ–∫–æ–Ω–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤',
          department: 'IT',
          level: 'Senior',
          requirements: ['Java', 'Spring', 'Kafka', 'Docker'],
          status: 'OPEN'
        },
        {
          title: 'ML Engineer',
          description: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ ML-–º–æ–¥–µ–ª–µ–π',
          department: 'Data Science',
          level: 'Middle',
          requirements: ['Python', 'TensorFlow', 'Docker', 'Kubernetes'],
          status: 'OPEN'
        },
        {
          title: 'Frontend Team Lead',
          description: '–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥–æ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
          department: 'IT',
          level: 'Senior',
          requirements: ['React', 'TypeScript', 'Leadership', 'Mentoring'],
          status: 'OPEN'
        },
        {
          title: 'DevOps Engineer',
          description: '–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –¥–µ–ø–ª–æ—è',
          department: 'IT',
          level: 'Middle',
          requirements: ['AWS', 'Kubernetes', 'CI/CD', 'Terraform'],
          status: 'OPEN'
        }
      ],
      skipDuplicates: true
    })

    // –î–æ–±–∞–≤–ª—è–µ–º –∫—É—Ä—Å—ã
    await prisma.course.createMany({
      data: [
        {
          title: '–ú–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å—ã –Ω–∞ Spring Boot',
          description: '–ò–∑—É—á–µ–Ω–∏–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–æ–≤',
          category: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ',
          level: 'Middle',
          skills: ['java', 'spring', 'microservices'],
          xpReward: 150,
          status: 'ACTIVE'
        },
        {
          title: 'Machine Learning –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö',
          description: '–û—Å–Ω–æ–≤—ã –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –∏ –Ω–µ–π—Ä–æ–Ω–Ω—ã—Ö —Å–µ—Ç–µ–π',
          category: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ',
          level: 'Junior',
          skills: ['python', 'machine learning', 'tensorflow'],
          xpReward: 200,
          status: 'ACTIVE'
        },
        {
          title: 'React –∏ TypeScript',
          description: '–°–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
          category: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ',
          level: 'Middle',
          skills: ['react', 'typescript', 'javascript'],
          xpReward: 120,
          status: 'ACTIVE'
        },
        {
          title: '–õ–∏–¥–µ—Ä—Å—Ç–≤–æ –≤ IT',
          description: '–ù–∞–≤—ã–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏',
          category: '–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç',
          level: 'Senior',
          skills: ['leadership', 'mentoring', 'management'],
          xpReward: 100,
          status: 'ACTIVE'
        },
        {
          title: 'Docker –∏ Kubernetes',
          description: '–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∞—Ü–∏—è –∏ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π',
          category: '–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ',
          level: 'Middle',
          skills: ['docker', 'kubernetes', 'devops'],
          xpReward: 180,
          status: 'ACTIVE'
        }
      ],
      skipDuplicates: true
    })

    // –î–æ–±–∞–≤–ª—è–µ–º –º–µ–Ω—Ç–æ—Ä—Å–∫–∏–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
    await prisma.mentorProgram.createMany({
      data: [
        {
          title: 'Junior ‚Üí Middle Developer',
          description: '–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞–∑–≤–∏—Ç–∏—è –¥–ª—è Junior —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤',
          skills: ['java', 'python', 'javascript'],
          mentorId: 'mentor-1', // ID –º–µ–Ω—Ç–æ—Ä–∞
          maxSlots: 5,
          status: 'ACTIVE'
        },
        {
          title: '–ü—É—Ç—å –≤ Data Science',
          description: '–ú–µ–Ω—Ç–æ—Ä–∏–Ω–≥ –¥–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤ Data Science',
          skills: ['python', 'machine learning', 'statistics'],
          mentorId: 'mentor-2',
          maxSlots: 3,
          status: 'ACTIVE'
        },
        {
          title: 'Tech Lead Bootcamp',
          description: '–†–∞–∑–≤–∏—Ç–∏–µ –ª–∏–¥–µ—Ä—Å–∫–∏—Ö –Ω–∞–≤—ã–∫–æ–≤ –¥–ª—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤',
          skills: ['leadership', 'architecture', 'mentoring'],
          mentorId: 'mentor-3',
          maxSlots: 4,
          status: 'ACTIVE'
        }
      ],
      skipDuplicates: true
    })

    console.log('‚úÖ Corporate data seeded successfully!')

  } catch (error) {
    console.error('‚ùå Error seeding corporate data:', error)
  } finally {
    await prisma.$disconnect()
  }
}

seedCorporateData()

