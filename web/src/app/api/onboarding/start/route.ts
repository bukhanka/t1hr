import { NextRequest, NextResponse } from 'next/server'
import { getServerSession } from 'next-auth/next'
import { authOptions } from '@/lib/auth'
import { prisma } from '@/lib/prisma'
import { openai, MODELS } from '@/lib/openai'
import { buildOnboardingSystemPrompt } from '@/lib/onboarding'

export async function POST(request: NextRequest) {
  try {
    const session = await getServerSession(authOptions)
    
    if (!session?.user?.id) {
      return NextResponse.json(
        { error: '–ù–µ–æ–±—Ö–æ–¥–∏–º–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è' }, 
        { status: 401 }
      )
    }

    // –ù–∞—Ö–æ–¥–∏–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let profile = await prisma.profile.findUnique({
      where: { userId: session.user.id }
    })

    if (!profile) {
      let user = await prisma.user.findUnique({
        where: { id: session.user.id }
      })

      if (!user) {
        user = await prisma.user.create({
          data: {
            id: session.user.id,
            email: session.user.email || '',
            name: session.user.name || '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
            role: (session.user as any).role || 'EMPLOYEE'
          }
        })
      }

      profile = await prisma.profile.create({
        data: {
          userId: user.id,
          xp: 50,
          level: 1,
          profileStrength: 10
        }
      })
    }

    // –°–æ–∑–¥–∞–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é —Å–µ—Å—Å–∏—é –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞
    const welcomeMessage = await getSmartOnboardingWelcomeMessage(profile.id, session.user.name || '–ö–æ–ª–ª–µ–≥–∞')
    
    const onboardingSession = await prisma.chatSession.create({
      data: {
        profileId: profile.id,
        title: "üöÄ –û–Ω–±–æ—Ä–¥–∏–Ω–≥-–∏–Ω—Ç–µ—Ä–≤—å—é",
        messages: {
          create: {
            role: 'ASSISTANT',
            content: welcomeMessage
          }
        }
      },
      include: { messages: { orderBy: { createdAt: 'asc' } } }
    })

    return NextResponse.json({
      sessionId: onboardingSession.id,
      welcomeMessage: onboardingSession.messages[0].content,
      profile: {
        level: profile.level,
        xp: profile.xp,
        tCoins: profile.tCoins
      }
    })

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞:', error)
    return NextResponse.json(
      { error: '–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' },
      { status: 500 }
    )
  }
}

async function getSmartOnboardingWelcomeMessage(profileId: string, userName: string): Promise<string> {
  const profile = await prisma.profile.findUnique({
    where: { id: profileId },
    include: {
      userSkills: {
        include: { skill: true }
      },
      userProjects: {
        include: { project: true }
      },
      careerGoals: true
    }
  })

  if (!profile) {
    return getBasicWelcomeMessage(userName)
  }

  // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —á—Ç–æ —É–∂–µ –∑–Ω–∞–µ–º
  const hasJobTitle = !!profile.jobTitle
  const hasDepartment = !!profile.department  
  const hasSkills = profile.userSkills.length > 0
  const hasProjects = profile.userProjects.length > 0
  const hasGoals = profile.careerGoals.length > 0

  let message = `–ü—Ä–∏–≤–µ—Ç, ${userName}! üëã

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ T1! –Ø –ù–∞–≤–∏–≥–∞—Ç–æ—Ä ‚Äî —Ç–≤–æ–π –ò–ò-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –∫–∞—Ä—å–µ—Ä–µ.

–î–∞–≤–∞–π –∑–∞ 5-7 –º–∏–Ω—É—Ç —Å–æ–∑–¥–∞–¥–∏–º —Ç–≤–æ–π –∏–¥–µ–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å! üöÄ

**–ó–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ —Ç—ã –ø–æ–ª—É—á–∏—à—å:**
- üèÜ **200 T-Coins** –∑–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
- ‚≠ê **–ë–æ–Ω—É—Å 50 T-Coins** –∑–∞ —Å–∫–æ—Ä–æ—Å—Ç—å
- üéØ **–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è**
- üìà **–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –±—É—Å—Ç –ø—Ä–æ—Ñ–∏–ª—è –¥–æ 60%**

---

`

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —á—Ç–æ —É–∂–µ –∑–Ω–∞–µ–º (—Å–æ–∑–¥–∞–µ–º wow-—ç—Ñ—Ñ–µ–∫—Ç)
  if (hasJobTitle || hasDepartment || hasSkills) {
    message += `**üß† –Ø —É–∂–µ –∑–Ω–∞—é –æ —Ç–µ–±–µ:**\n`
    
    if (hasJobTitle) {
      message += `‚úÖ –î–æ–ª–∂–Ω–æ—Å—Ç—å: **${profile.jobTitle}**\n`
    }
    
    if (hasDepartment) {
      message += `‚úÖ –û—Ç–¥–µ–ª: **${profile.department}**\n`
    }
    
    if (hasSkills) {
      const skillNames = profile.userSkills.slice(0, 3).map(us => us.skill.name)
      message += `‚úÖ –ù–∞–≤—ã–∫–∏: **${skillNames.join(', ')}**${profile.userSkills.length > 3 ? ` –∏ –µ—â–µ ${profile.userSkills.length - 3}` : ''}\n`
    }
    
    message += `\n`
  }

  // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –¥–∞–Ω–Ω—ã—Ö
  if (!hasJobTitle) {
    message += `–†–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ —Ç–≤–æ—é **—Ç–µ–∫—É—â—É—é —Ä–æ–ª—å** ‚Äî —á—Ç–æ –∏–º–µ–Ω–Ω–æ –¥–µ–ª–∞–µ—à—å –≤ –∫–æ–º–∞–Ω–¥–µ?`
  } else if (!hasSkills || profile.userSkills.length < 3) {
    message += `–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ **–æ—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏**, —Å –∫–æ—Ç–æ—Ä—ã–º–∏ —Ä–∞–±–æ—Ç–∞–µ—à—å. –ö–∞–∫–∏–µ 3-5 –≥–ª–∞–≤–Ω—ã—Ö –Ω–∞–≤—ã–∫–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ?`
  } else if (!hasProjects) {
    message += `–ö—Ä—É—Ç–æ! –ê —Ç–µ–ø–µ—Ä—å —Ä–∞—Å—Å–∫–∞–∂–∏ –ø—Ä–æ —Å–≤–æ–π **—Å–∞–º—ã–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –ø—Ä–æ–µ–∫—Ç** ‚Äî —á—Ç–æ –¥–µ–ª–∞–ª, –∫–∞–∫—É—é —Ä–æ–ª—å –∏–≥—Ä–∞–ª, —á–µ–≥–æ –¥–æ–±–∏–ª—Å—è?`
  } else if (!hasGoals) {
    message += `–°—É–ø–µ—Ä! –ü–æ—Å–ª–µ–¥–Ω–∏–π –≤–∞–∂–Ω—ã–π –≤–æ–ø—Ä–æ—Å ‚Äî **–∫—É–¥–∞ –ø–ª–∞–Ω–∏—Ä—É–µ—à—å —Ä–∞–∑–≤–∏–≤–∞—Ç—å—Å—è?** Senior, —Ç–∏–º–ª–∏–¥, –∞—Ä—Ö–∏—Ç–µ–∫—Ç–æ—Ä, –∏–ª–∏ –º–æ–∂–µ—Ç –≤ –¥—Ä—É–≥—É—é –æ–±–ª–∞—Å—Ç—å?`
  } else {
    message += `–û—Ç–ª–∏—á–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å! –î–∞–≤–∞–π **–¥–æ–ø–æ–ª–Ω–∏–º –¥–µ—Ç–∞–ª–∏** ‚Äî —Ä–∞—Å—Å–∫–∞–∂–∏ –±–æ–ª—å—à–µ –æ —Ç–æ–º, —á—Ç–æ —Ç–µ–±–µ –æ—Å–æ–±–µ–Ω–Ω–æ –Ω—Ä–∞–≤–∏—Ç—Å—è –≤ —Ä–∞–±–æ—Ç–µ?`
  }

  return message
}

function getBasicWelcomeMessage(userName: string): string {
  return `–ü—Ä–∏–≤–µ—Ç, ${userName}! üëã

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ T1! –Ø –ù–∞–≤–∏–≥–∞—Ç–æ—Ä ‚Äî —Ç–≤–æ–π –ò–ò-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç –ø–æ –∫–∞—Ä—å–µ—Ä–µ. 

–î–∞–≤–∞–π –∑–∞ 5-7 –º–∏–Ω—É—Ç —Å–æ–∑–¥–∞–¥–∏–º —Ç–≤–æ–π –∏–¥–µ–∞–ª—å–Ω—ã–π –ø—Ä–æ—Ñ–∏–ª—å –∏ —Å—Ä–∞–∑—É –Ω–∞–π–¥–µ–º –ª—É—á—à–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –≤ –∫–æ–º–ø–∞–Ω–∏–∏! 

**–ó–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏–µ –æ–Ω–±–æ—Ä–¥–∏–Ω–≥–∞ —Ç—ã –ø–æ–ª—É—á–∏—à—å:**
- üèÜ **200 T-Coins** –∑–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ
- ‚≠ê **–ë–æ–Ω—É—Å 50 T-Coins** –µ—Å–ª–∏ –ø—Ä–æ–π–¥–µ—à—å –±—ã—Å—Ç—Ä–æ  
- üéØ **–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è** 
- üìà **–ú–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –±—É—Å—Ç –ø—Ä–æ—Ñ–∏–ª—è –¥–æ 60%**

–ì–æ—Ç–æ–≤ –Ω–∞—á–∞—Ç—å? –†–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ ‚Äî **–∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç –∏ —á–µ–º –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è –≤ IT?**`
}

