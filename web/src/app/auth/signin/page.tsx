"use client"

import { useState } from "react"
import { signIn, getSession } from "next-auth/react"
import { useRouter } from "next/navigation"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Label } from "@/components/ui/label"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Alert, AlertDescription } from "@/components/ui/alert"

export default function SignIn() {
  const [email, setEmail] = useState("")
  const [password, setPassword] = useState("")
  const [error, setError] = useState("")
  const [loading, setLoading] = useState(false)
  const router = useRouter()

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    setLoading(true)
    setError("")

    try {
      const result = await signIn("credentials", {
        email,
        password,
        redirect: false,
      })

      if (result?.error) {
        setError("–ù–µ–≤–µ—Ä–Ω—ã–µ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
      } else {
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ dashboard
        router.push("/dashboard")
      }
    } catch (error) {
      setError("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ")
    } finally {
      setLoading(false)
    }
  }

  const handleDemoLogin = async (email: string, name: string) => {
    setLoading(true)
    setError("")

    try {
      const result = await signIn("credentials", {
        email,
        password: "demo", // –ü–∞—Ä–æ–ª—å –Ω–µ –≤–∞–∂–µ–Ω –¥–ª—è –¥–µ–º–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        redirect: false,
      })

      if (result?.error) {
        setError("–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞ –≤ –¥–µ–º–æ-—Ä–µ–∂–∏–º–µ")
      } else {
        router.push("/dashboard")
      }
    } catch (error) {
      setError("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Ö–æ–¥–µ")
    } finally {
      setLoading(false)
    }
  }

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
      <Card className="w-full max-w-md">
        <CardHeader className="space-y-1">
          <div className="flex justify-center mb-4">
            <div className="w-12 h-12 bg-blue-600 rounded-lg flex items-center justify-center">
              <span className="text-white font-bold text-xl">ST</span>
            </div>
          </div>
          <CardTitle className="text-2xl font-bold text-center">
            –í—Ö–æ–¥ –≤ SciBox Talent
          </CardTitle>
          <CardDescription className="text-center">
            –í–≤–µ–¥–∏—Ç–µ –≤–∞—à–∏ —É—á–µ—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–∏—Å—Ç–µ–º–µ
          </CardDescription>
        </CardHeader>
        <CardContent>
          <form onSubmit={handleSubmit} className="space-y-4">
            <div className="space-y-2">
              <Label htmlFor="email">Email</Label>
              <Input
                id="email"
                type="email"
                placeholder="user@company.com"
                value={email}
                onChange={(e) => setEmail(e.target.value)}
                required
              />
            </div>
            <div className="space-y-2">
              <Label htmlFor="password">–ü–∞—Ä–æ–ª—å</Label>
              <Input
                id="password"
                type="password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                required
              />
            </div>
            
            {error && (
              <Alert className="border-red-200 bg-red-50">
                <AlertDescription className="text-red-800">
                  {error}
                </AlertDescription>
              </Alert>
            )}

            <Button 
              type="submit" 
              className="w-full" 
              disabled={loading}
            >
              {loading ? "–í—Ö–æ–¥..." : "–í–æ–π—Ç–∏"}
            </Button>
          </form>

          <div className="mt-4">
            <div className="relative">
              <div className="absolute inset-0 flex items-center">
                <span className="w-full border-t" />
              </div>
              <div className="relative flex justify-center text-xs uppercase">
                <span className="bg-white px-2 text-muted-foreground">
                  –ò–ª–∏ –≤–æ–π–¥–∏—Ç–µ –±—ã—Å—Ç—Ä–æ
                </span>
              </div>
            </div>
          </div>

          {/* Demo quick login buttons */}
          <div className="mt-4 space-y-3">
            <div className="text-sm font-medium text-gray-700 mb-2">üöÄ –î–µ–º–æ-–∞–∫–∫–∞—É–Ω—Ç—ã –¥–ª—è –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏:</div>
            
            {/* –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–æ–ª–∏ */}
            <div className="grid grid-cols-1 gap-2">
              <Button
                type="button"
                variant="outline"
                className="w-full justify-start h-12 border-blue-200 hover:bg-blue-50"
                onClick={() => handleDemoLogin('demo.employee@company.com', '–î–µ–º–æ –°–æ—Ç—Ä—É–¥–Ω–∏–∫')}
              >
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center">
                    <span className="text-blue-600 text-sm font-medium">üë®‚Äçüíª</span>
                  </div>
                  <div className="text-left">
                    <p className="font-medium">–î–µ–º–æ –°–æ—Ç—Ä—É–¥–Ω–∏–∫</p>
                    <p className="text-sm text-muted-foreground">Senior Full-Stack Developer</p>
                  </div>
                </div>
              </Button>

              <Button
                type="button"
                variant="outline"
                className="w-full justify-start h-12 border-green-200 hover:bg-green-50"
                onClick={() => handleDemoLogin('demo.manager@company.com', '–î–µ–º–æ –ú–µ–Ω–µ–¥–∂–µ—Ä')}
              >
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-green-100 rounded-full flex items-center justify-center">
                    <span className="text-green-600 text-sm font-medium">üë®‚Äçüíº</span>
                  </div>
                  <div className="text-left">
                    <p className="font-medium">–î–µ–º–æ –ú–µ–Ω–µ–¥–∂–µ—Ä</p>
                    <p className="text-sm text-muted-foreground">Engineering Manager</p>
                  </div>
                </div>
              </Button>

              <Button
                type="button"
                variant="outline"
                className="w-full justify-start h-12 border-purple-200 hover:bg-purple-50"
                onClick={() => handleDemoLogin('demo.hr@company.com', '–î–µ–º–æ HR')}
              >
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-purple-100 rounded-full flex items-center justify-center">
                    <span className="text-purple-600 text-sm font-medium">üë©‚Äçüíº</span>
                  </div>
                  <div className="text-left">
                    <p className="font-medium">–î–µ–º–æ HR</p>
                    <p className="text-sm text-muted-foreground">HR Business Partner</p>
                  </div>
                </div>
              </Button>
            </div>

            <div className="text-sm font-medium text-gray-700 mb-2 mt-4">üë• –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–æ–ª–∏:</div>
            
            {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ä–æ–ª–∏ */}
            <div className="grid grid-cols-1 gap-2">
              <Button
                type="button"
                variant="outline"
                className="w-full justify-start h-10 text-sm"
                onClick={() => handleDemoLogin('ivan.petrov@company.com', '–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤')}
              >
                <div className="flex items-center space-x-2">
                  <span className="text-blue-600">üé®</span>
                  <span>–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤ - Senior Frontend</span>
                </div>
              </Button>

              <Button
                type="button"
                variant="outline"
                className="w-full justify-start h-10 text-sm"
                onClick={() => handleDemoLogin('olga.nikolaeva@company.com', '–û–ª—å–≥–∞ –ù–∏–∫–æ–ª–∞–µ–≤–∞')}
              >
                <div className="flex items-center space-x-2">
                  <span className="text-purple-600">üìä</span>
                  <span>–û–ª—å–≥–∞ –ù–∏–∫–æ–ª–∞–µ–≤–∞ - Data Scientist</span>
                </div>
              </Button>

              <Button
                type="button"
                variant="outline"
                className="w-full justify-start h-10 text-sm"
                onClick={() => handleDemoLogin('mikhail.fedorov@company.com', '–ú–∏—Ö–∞–∏–ª –§–µ–¥–æ—Ä–æ–≤')}
              >
                <div className="flex items-center space-x-2">
                  <span className="text-orange-600">‚öôÔ∏è</span>
                  <span>–ú–∏—Ö–∞–∏–ª –§–µ–¥–æ—Ä–æ–≤ - DevOps</span>
                </div>
              </Button>

              <Button
                type="button"
                variant="outline"
                className="w-full justify-start h-10 text-sm"
                onClick={() => handleDemoLogin('anna.morozova@company.com', '–ê–Ω–Ω–∞ –ú–æ—Ä–æ–∑–æ–≤–∞')}
              >
                <div className="flex items-center space-x-2">
                  <span className="text-green-600">üå±</span>
                  <span>–ê–Ω–Ω–∞ –ú–æ—Ä–æ–∑–æ–≤–∞ - Junior Frontend</span>
                </div>
              </Button>

              <Button
                type="button"
                variant="outline"
                className="w-full justify-start h-10 text-sm"
                onClick={() => handleDemoLogin('vladimir.senior@company.com', '–í–ª–∞–¥–∏–º–∏—Ä –°–µ–Ω—å–æ—Ä–æ–≤')}
              >
                <div className="flex items-center space-x-2">
                  <span className="text-red-600">üèÜ</span>
                  <span>–í–ª–∞–¥–∏–º–∏—Ä –°–µ–Ω—å–æ—Ä–æ–≤ - Principal Engineer</span>
                </div>
              </Button>
            </div>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}
